-- Add AutoGen Configuration to Collective Memory
-- Generated on 2025-07-21

-- Add configuration to collective_memory table
INSERT INTO collective_memory (id, swarm_id, key, value, type, created_at)
VALUES 
  ('config-autogen-' || hex(randomblob(8)), 'swarm-1753072259174-yjdkiusc3', 'autogen_config', '{"framework": "Microsoft AutoGen v0.6.X", "wrapperUrl": "http://localhost:8000", "models": ["claude-opus-4-20250514", "claude-sonnet-4-20250514"], "runtime": "SingleThreadedAgentRuntime", "patterns": ["RoundRobinGroupChat", "SelectorGroupChat", "Swarm"], "routing": "TypeSubscription"}', 'configuration', datetime('now')),
  ('config-human-' || hex(randomblob(8)), 'swarm-1753072259174-yjdkiusc3', 'human_in_loop_config', '{"enabled": true, "humanInputMode": "ALWAYS", "maxConsecutiveAutoReply": 5, "terminationConditions": {"keywords": ["TERMINATE", "EXIT", "STOP"], "maxIterations": 50, "timeLimit": 3600}, "interventionPoints": ["task_planning", "code_review", "deployment_approval"], "streamingEnabled": true}', 'configuration', datetime('now')),
  ('config-memory-' || hex(randomblob(8)), 'swarm-1753072259174-yjdkiusc3', 'memory_persistence_config', '{"enabled": true, "sessionTracking": true, "contextTypes": ["short_term", "mid_term", "long_term"], "retentionPolicy": {"short_term": "1_day", "mid_term": "7_days", "long_term": "permanent"}, "features": {"crossSessionContext": true, "contextTimeline": true, "autoSave": true, "compression": true}}', 'configuration', datetime('now')),
  ('pattern-roundrobin-' || hex(randomblob(8)), 'swarm-1753072259174-yjdkiusc3', 'roundrobin_pattern', '{"type": "RoundRobinGroupChat", "agents": ["Runtime Orchestrator", "Agent Factory", "Tool Builder", "Integration Tester"], "maxRounds": 10, "implementation": {"baseClass": "GroupChat", "selectionMethod": "round_robin", "messageProtocol": "CloudEvents"}}', 'pattern', datetime('now')),
  ('pattern-selector-' || hex(randomblob(8)), 'swarm-1753072259174-yjdkiusc3', 'selector_pattern', '{"type": "SelectorGroupChat", "agents": ["Chat Orchestrator", "Message Flow Analyst", "Routing Specialist"], "selectionCriteria": "task_requirements", "implementation": {"baseClass": "GroupChat", "selectionMethod": "llm_based", "contextWindow": 2048}}', 'pattern', datetime('now')),
  ('pattern-swarm-' || hex(randomblob(8)), 'swarm-1753072259174-yjdkiusc3', 'swarm_pattern', '{"type": "Swarm", "agents": ["Queen Coordinator", "Runtime Orchestrator", "Chat Orchestrator"], "handoffProtocol": "TypeSubscription", "implementation": {"baseClass": "SwarmAgent", "handoffMethod": "on_condition", "stateManagement": "distributed"}}', 'pattern', datetime('now')),
  ('pattern-routing-' || hex(randomblob(8)), 'swarm-1753072259174-yjdkiusc3', 'routing_pattern', '{"type": "TypeSubscription", "topics": ["agent_coordination", "task_execution", "error_handling", "human_input"], "implementation": {"baseClass": "RoutedAgent", "decorator": "@message_handler", "pubsubModel": "CloudEvents"}}', 'pattern', datetime('now'));